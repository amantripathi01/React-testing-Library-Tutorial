// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Login from './Login';

describe('Login Component', () => {
  let component;

  beforeEach(() => {
    component = render(<Login />);
  });

  test('renders form', () => {
    expect(component.container.querySelector('form')).toBeInTheDocument();
  });

  test('renders email input', () => {
    expect(component.getByPlaceholderText('Enter email')).toBeInTheDocument();
  });

  test('renders password input', () => {
    expect(component.getByPlaceholderText('Password')).toBeInTheDocument();
  });

  test('renders submit button', () => {
    expect(component.getByTestId('submit')).toBeInTheDocument();
  });

  test('renders reset button', () => {
    expect(component.getByTestId('reset')).toBeInTheDocument();
  });

  test('form submit with valid email', () => {
    const emailInput = component.getByPlaceholderText('Enter email');
    fireEvent.change(emailInput, { target: { value: 'test@gmail.com' } });
    const submitButton = component.getByTestId('submit');
    fireEvent.click(submitButton);
    expect(component.getByTestId('user')).toBeInTheDocument();
  });

  test('form submit with invalid email', () => {
    const emailInput = component.getByPlaceholderText('Enter email');
    fireEvent.change(emailInput, { target: { value: 'test' } });
    const submitButton = component.getByTestId('submit');
    fireEvent.click(submitButton);
    expect(component.getByTestId('error')).toBeInTheDocument();
  });

  test('form reset', () => {
    const emailInput = component.getByPlaceholderText('Enter email');
    fireEvent.change(emailInput, { target: { value: 'test@gmail.com' } });
    const passwordInput = component.getByPlaceholderText('Password');
    fireEvent.change(passwordInput, { target: { value: '123456' } });
    const resetButton = component.getByTestId('reset');
    fireEvent.click(resetButton);
    expect(emailInput.value).toBe('');
    expect(passwordInput.value).toBe('');
  });
});
