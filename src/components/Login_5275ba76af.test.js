// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

import React from "react";
import { render, fireEvent } from "@testing-library/react";
import { Login } from "./Login.js";

describe("Login Component", () => {
  let getByTestId;

  beforeEach(() => {
    const component = render(<Login />);
    getByTestId = component.getByTestId;
  });

  const setup = (email, password) => {
    const emailInput = getByTestId("formBasicEmail");
    fireEvent.change(emailInput, { target: { value: email } });

    if (password) {
      const passwordInput = getByTestId("formBasicPassword");
      fireEvent.change(passwordInput, { target: { value: password } });
    }

    const submitButton = getByTestId("submit");
    fireEvent.click(submitButton);

    return { emailInput, submitButton };
  };

  test("Email is not valid", () => {
    const { emailInput } = setup("invalidEmail");

    const errorAlert = getByTestId("error");
    expect(errorAlert).toHaveTextContent("Email is not valid");
    expect(emailInput.value).toBe("invalidEmail");
  });

  test("Email is valid", () => {
    const { emailInput } = setup("valid@email.com");

    const userAlert = getByTestId("user");
    expect(userAlert).toHaveTextContent("valid@email.com");
    expect(emailInput.value).toBe("valid@email.com");
  });

  test("Reset form", () => {
    const { emailInput } = setup("valid@email.com", "password");

    const resetButton = getByTestId("reset");
    fireEvent.click(resetButton);

    expect(emailInput.value).toBe("");
    expect(getByTestId("formBasicPassword").value).toBe("");
  });
});
