// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Login from './Login';

describe('Login Component', () => {

  let component;
  beforeEach(() => {
    component = render(<Login />);
  });

  test('renders form with email, password, submit and reset', () => {
    expect(component.getByPlaceholderText('Enter email')).toBeInTheDocument();
    expect(component.getByPlaceholderText('Password')).toBeInTheDocument();
    expect(component.getByTestId('submit')).toBeInTheDocument();
    expect(component.getByTestId('reset')).toBeInTheDocument();
  });

  test('allows the user to login successfully', async () => {
    fireEvent.change(component.getByPlaceholderText('Enter email'), {
      target: { value: 'user@example.com' },
    });
    fireEvent.change(component.getByPlaceholderText('Password'), {
      target: { value: 'password' },
    });
    fireEvent.click(component.getByTestId('submit'));
    expect(component.getByTestId('user')).toBeInTheDocument();
    expect(component.queryByTestId('error')).toBeNull();
  });

  test('shows an error when the email is not valid', () => {
    fireEvent.change(component.getByPlaceholderText('Enter email'), {
      target: { value: 'user' },
    });
    fireEvent.change(component.getByPlaceholderText('Password'), {
      target: { value: 'password' },
    });
    fireEvent.click(component.getByTestId('submit'));
    expect(component.getByTestId('error')).toBeInTheDocument();
    expect(component.queryByTestId('user')).toBeNull();
  });

  test('resets the form when the reset button is clicked', () => {
    fireEvent.change(component.getByPlaceholderText('Enter email'), {
      target: { value: 'user@example.com' },
    });
    fireEvent.change(component.getByPlaceholderText('Password'), {
      target: { value: 'password' },
    });
    fireEvent.click(component.getByTestId('reset'));
    expect(component.getByPlaceholderText('Enter email').value).toBe('');
    expect(component.getByPlaceholderText('Password').value).toBe('');
  });
});
